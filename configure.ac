
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

# AC_PREREQ(2.61)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)

AM_INIT_AUTOMAKE
AM_CONDITIONAL([am__fastdepOBJC], false)
AM_CONDITIONAL([am__fastdepCXX], false)

dnl Include GNU make check
builtin(include,src/confdb/check_gnu_make.m4)

dnl Include OpenMP related definitions
builtin(include,src/confdb/ax_pthread.m4)
builtin(include,src/confdb/ax_openmp.m4)

dnl Include MPI related definitions
# builtin(include,src/confdb/ax_check_libmpi.m4)
builtin(include,src/confdb/ax_mpi.m4)

dnl Include BLAS library check
builtin(include,src/confdb/ax_blas.m4)
builtin(include,src/confdb/ax_blas_f77_func.m4)

dnl Include zlib Check related definitions
builtin(include,src/confdb/ax_check_zlib.m4)

dnl Include hdf5 Check
builtin(include,src/confdb/ax_lib_hdf5.m4)

dnl Include pkg-config Check
builtin(include,src/confdb/pkg.m4)


AC_CONFIG_SRCDIR([src/programs/SPH_MHD/main_sph_MHD_w_psf.f90])
# AC_CONFIG_HEADER([config.h])

AC_ARG_WITH(fftw3,
	[  --with-fftw3            Use fftw3 library],[USE_fftw3='yes'],[USE_fftw3='no'])
AC_ARG_WITH(libpng,
	[  --with-libpng           Use libpng library],[USE_libpng='yes'],[USE_libpng='no'])

AC_MSG_RESULT(with-fftw3...   "${USE_fftw3}")
AC_MSG_RESULT(enable-libpng..."${USE_libpng}")
AC_MSG_RESULT(with-blas...    "${with_blas}")

# Checks for programs.
AC_PROG_CC
AC_PROG_FC

if test -z ${FC}
then
	FC=${F77}
else
	F77=${FC}
fi

if test ${host_alias} = "powerpc64-bgq-linux"
then
  XL_FORTRAN="__bgq__"
fi
AC_SUBST(XL_FORTRAN)

if test -z ${AR}
then
	ar_bin="ar"
else
	ar_bin="${AR}"
fi
AC_SUBST(ar_bin)

AC_PROG_MAKE_SET
AC_PROG_RANLIB

# GNU make check
CHECK_GNU_MAKE()
GMAKE=$_cv_gnu_make_command
AC_SUBST(GMAKE)

# libtool check
PKG_PROG_PKG_CONFIG

# Checks using C compiler
AC_LANG_SAVE
AC_LANG(C)
# Check OpenMP
AX_OPENMP
AC_SUBST(OPENMP_CFLAGS)
# Check MPI
AX_MPI
AC_LANG_RESTORE

# Checks using Fortran Compiler
AC_LANG_SAVE
AC_LANG(Fortran)
# Check OpenMP
AX_OPENMP
AC_SUBST(OPENMP_FCFLAGS)
# Check MPI
AX_MPI
AC_LANG_RESTORE
AC_SUBST(MPIDIR)
AC_SUBST(MPILIBS)
AC_SUBST(MPIINCDIR)

AC_ARG_VAR(MPIRUN, Command and options to invoke tests using MPI (Default: mpirun))

if test -n "${MPIRUN}"; then
    AC_MSG_RESULT(Defined MPIRUN..."${MPIRUN}")
else
	AC_MSG_RESULT(MPIRUN is not defined)
	MPIRUN="mpirun"
    AC_SUBST(MPIRUN)
fi

# AC_MSG_RESULT(MPIDIR..."${MPIDIR}")
# AC_MSG_RESULT(MPIINCDIR..."${MPIINCDIR}")
# AC_MSG_RESULT(MPILIBS..."${MPILIBS}")


# hdf5 check
AX_LIB_HDF5(parallel)
AC_MSG_RESULT(HDF5_LDFLAGS... "${HDF5_LDFLAGS}")
AC_MSG_RESULT(HDF5_PFLIBS... "${HDF5_PFLIBS}")
AC_MSG_RESULT(HDF5_H5PFC...  "${HDF5_H5PFC}")

# Check BLAS
if test -n "${with_blas}"; then
    AX_BLAS
#   AX_BLAS_F77_FUNC
fi
AC_SUBST(BLAS_LIBS)


# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([stdlib.h string.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST

# Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([floor memset sqrt strrchr strtol])

# Check FFTW3
if test ${USE_fftw3} = "yes"
then
	PKG_CHECK_MODULES([FFTW3], fftw3, have_fftw3=yes, AC_MSG_ERROR(Cannot find FFTW 3.x))
	echo "have_fftw3=$have_fftw3"
fi
if test ${have_fftw3} = "yes"
then
	PKGFLAGS_FFTW3="fftw3"
fi
AC_SUBST(PKGFLAGS_FFTW3)
AC_SUBST(FFTW3_CFLAGS)
AC_SUBST(FFTW3_LIBS)

# Check zlib
if test ${with_zlib} != "no"
then
	PKG_CHECK_MODULES([ZLIB], zlib, have_zlib=yes, AC_MSG_ERROR(Cannot find zlib))
	echo "have_zlib=$have_zlib"
		
	if test ${have_zlib} = "yes"
	then
		PKGFLAGS_ZLIB="z"
	else
		AX_CHECK_ZLIB
		if test -n "${LIBS}"
		then
			ZLIB_CFLAGS="${CPPFLAGS}"
			ZLIB_LIBS="${LDFLAGS} ${LIBS}"
		fi
	fi
	AC_SUBST(PKGFLAGS_ZLIB)
	AC_SUBST(ZLIB_CFLAGS)
	AC_SUBST(ZLIB_LIBS)
fi

# Check libpng
if test ${USE_libpng} = "yes"
then
	PKG_CHECK_MODULES([PNG], libpng, have_libpng=yes, AC_MSG_ERROR(Cannot find libpng))
	echo "have_libpng=$have_libpng"
fi
if test ${have_libpng} = "yes"
then
	PKGFLAGS_PNG="png"
else
	PKGFLAGS_PNG=""
	PNG_CFLAGS=""
	PNG_LIBS=""
fi
AC_SUBST(PKGFLAGS_PNG)
AC_SUBST(PNG_CFLAGS)
AC_SUBST(PNG_LIBS)

AC_MSG_RESULT()
AC_MSG_RESULT(-----   Configuration summary   -------------------------------)
AC_MSG_RESULT()
AC_MSG_RESULT(  host:        "${host}")
AC_MSG_RESULT(  host_alias:  "${host_alias}")
AC_MSG_RESULT(XL_FORTRAN:    "${XL_FORTRAN}")
AC_MSG_RESULT(mpirun command and options: "${MPIRUN}")
if test -n "${OPENMP_FCFLAGS}"; then
        AC_MSG_RESULT(    Use OpenMP ...        yes)
else
        AC_MSG_RESULT(    Use OpenMP ...         no)
fi
AC_MSG_RESULT()
if test -n "${BLAS_LIBS}"; then
        AC_MSG_RESULT(    Use BLAS ...          yes)
else
        AC_MSG_RESULT(    Use BLAS ...           no)
fi
AC_MSG_RESULT()
if test -n "${FFTW3_LIBS}"; then
        AC_MSG_RESULT(    Use FFTW3 ...         yes)
else
        AC_MSG_RESULT(    Use FFTW3 ...          no)
fi
if test -n "${HDF5_PFLIBS}"; then
        AC_MSG_RESULT(    Use parallel HDF5 ... yes)
else
        AC_MSG_RESULT(    Use parallel HDF5 ...  no)
fi
AC_MSG_RESULT()
if test -n "${ZLIB_LIBS}"; then
        AC_MSG_RESULT(    Use zlib at ...       yes)
else
        AC_MSG_RESULT(    Use zlib ...           no)
fi
if test -n "${PNG_LIBS}"; then
        AC_MSG_RESULT(    Use libpng output...  yes)
else
        AC_MSG_RESULT(    Use libpng output...   no)
fi
AC_MSG_RESULT()
AC_MSG_RESULT(---------------------------------------------------------------)
AC_MSG_RESULT()


AC_CONFIG_FILES([Makefile])
AC_OUTPUT
